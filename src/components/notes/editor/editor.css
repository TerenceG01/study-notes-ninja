
.rich-text-toolbar {
  position: sticky;
  top: 0;
  z-index: 50;
  background-color: var(--background);
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
}

.ProseMirror {
  outline: none;
  min-height: 150px;
  padding: 1rem;
  padding-top: 0.75rem;
  width: 100%;
}

.ProseMirror > * + * {
  margin-top: 0.75em;
}

.ProseMirror ul,
.ProseMirror ol {
  padding: 0 1rem;
}

.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6 {
  line-height: 1.1;
}

.ProseMirror code {
  background-color: rgba(97, 97, 97, 0.1);
  color: #616161;
}

.ProseMirror pre {
  background: #0d0d0d;
  color: #fff;
  font-family: "JetBrainsMono", monospace;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
}

.ProseMirror pre code {
  color: inherit;
  padding: 0;
  background: none;
}

.ProseMirror mark {
  background-color: rgba(255, 235, 59, 0.3);
  color: inherit;
}

.ProseMirror img {
  max-width: 100%;
  height: auto;
}

.ProseMirror blockquote {
  padding-left: 1rem;
  border-left: 3px solid rgba(13, 13, 13, 0.1);
  color: rgba(13, 13, 13, 0.5);
  font-style: italic;
}

.ProseMirror hr {
  border: none;
  border-top: 2px solid rgba(13, 13, 13, 0.1);
  margin: 2rem 0;
}

/* Placeholder (at the top) */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
}

.no-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Ensure editor content scrolls properly without affecting toolbar */
.editor-content-container {
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* Bottom status bar */
.editor-status-bar {
  position: sticky;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 40; 
  border-top: 1px solid var(--border);
}
